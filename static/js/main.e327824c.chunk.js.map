{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","onClick","style","ref","map","option","FlashcardList","flashcards","id","App","categoryEl","setFlashCards","categories","setCategories","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","action","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e327824c.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\n\r\nfunction Flashcard({flashcard}) {\r\n\r\n    const [flip,setFlip] = useState(false);\r\n    const [height,setHeight] = useState('initial')\r\n    const frontEl = useRef();\r\n    const backEl = useRef();\r\n    const setMaxHeight = () => {\r\n        const frontHeight= frontEl.current.getBoundingClientRect().height;\r\n        const backHeight= backEl.current.getBoundingClientRect().height;\r\n        setHeight(Math.max(frontHeight,backHeight,100));\r\n        \r\n    }\r\n\r\n    useEffect(setMaxHeight,[flashcard.question,flashcard.answer,flashcard.options])\r\n    useEffect(() => {\r\n        window.addEventListener('resize',setMaxHeight);\r\n        //cleanup\r\n        return() => {\r\n            window.removeEventListener('resize',setMaxHeight);\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className={`card ${flip?'flip':''}`} onClick={() => setFlip(!flip)} style={{ height: height}}>\r\n            <div className=\"front\" ref={frontEl}>\r\n                {flashcard.question}\r\n\r\n                <div className=\"flashcard-options\">\r\n                    {flashcard.options.map(option => {\r\n                        return <div className=\"flashcard-option\" key={option}>{option}</div>\r\n                    })}\r\n                </div> \r\n            </div>\r\n\r\n            <div className=\"back\" ref={backEl}>\r\n                {flashcard.answer}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flashcard\r\n","import React from 'react'\r\nimport Flashcard from './Flashcard'\r\n\r\nfunction FlashcardList({flashcards}) {\r\n    return (\r\n        <div className=\"card-grid\">\r\n            {flashcards.map(flashcard => {\r\n                return <Flashcard flashcard={flashcard} key={flashcard.id}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FlashcardList\r\n","import { useEffect, useRef, useState } from \"react\";\nimport FlashcardList from \"./FlashcardList\";\nimport \"./app.css\";\nimport axios from \"axios\";\nfunction App() {\n\n  const categoryEl = useRef();\n  const [flashcards,setFlashCards] = useState([]);\n  const [categories,setCategories] = useState([]);\n  const amountEl = useRef()\n\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php')\n    .then(res => {\n      setCategories(res.data.trivia_categories)\n    })\n  }, [])\n\n  useEffect(() => {\n    \n  }, [])\n\n  \n\n  function decodeString(str){\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e){\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php',{\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    })\n    .then(res => {\n      setFlashCards(res.data.results.map((questionItem,index) => {\n        const answer = decodeString(questionItem.correct_answer);\n        const options = [\n          ...questionItem.incorrect_answers.map(a => decodeString(a)),\n          answer]\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeString(questionItem.question),\n          answer: decodeString(questionItem.correct_answer),\n          options: options.sort(() => Math.random() - 0.5)\n        }\n      }))\n    })\n  }\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handleSubmit} className=\"header\">\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select name=\"\" id=\"category\" ref={categoryEl}>\n            {categories.map(category => {\n              return <option value={category.id} key={category.id}>{category.name}</option>\n            })}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">No. of questions</label> \n          <input type=\"number\" id=\"amount\" min={1} step={1} defaultValue={10} ref={amountEl}/>\n        </div>\n\n        <div className=\"form-group\">\n            <button className=\"btn\">Generate</button>\n        </div>\n\n\n      </form>\n\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards}/>\n      </div>\n\n      {/* <div className=\"footer\">\n        <p>Made with  by ❤️ <a href=\"https://harshmathurx.github.io/website/\">Harsh Mathur</a></p>\n      </div> */}\n    </>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}